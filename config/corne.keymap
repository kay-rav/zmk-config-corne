/* 
 * ============================== KEYMAP ==============================
 * 
 * Description:     Setup keymap configurations
 * Author:          K. RAVJI
 * 
 * Keymap General:  https://zmk.dev/docs/keymaps
 * Keymap Codes:    https://zmk.dev/docs/keymaps/list-of-keycodes#f-keys
*/


#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>


// Setup LED Strip (21 backlight + 6 glowlight)
&led_strip {
  chain-length = <27>;
};


#define TAPPING_TERM 200

/ {
  behaviors {
    /*
    * td_lock groups locking functions into one key:
    *  - tap once to lock the host
    *  - tap twice to put the host to sleep
    */

    td_lock: tap_dance_lock {
      compatible = "zmk,behavior-tap-dance";
      label = "TAP_DANCE_LOCK";
      #binding-cells = <0>;
      tapping-term-ms = <TAPPING_TERM>;
      bindings = <&kp LG(LC(Q))>, <&kp LG(LA(C_EJECT))>;
    };
  };

  combos {
    compatible = "zmk,combos";

    Clear_BLE_Profile {
      bindings = <&bt BT_CLR>;
      key-positions = <0 38 5>;
    };

    Space {
      bindings = <&kp SPACE>;
      key-positions = <29 28>;
    };

    Enter {
      bindings = <&kp ENTER>;
      key-positions = <17 16>;
    };

    Capslock {
      bindings = <&kp CLCK>;
      key-positions = <5 6>;
    };
  };

  macros {
    git_status: git_status {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp S &kp T &kp A &kp T &kp U &kp S>;
      label = "GIT_STATUS";
    };
    git_commit_all: git_commit_all {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      bindings = <&kp G &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp M &kp I &kp T &kp SPACE &kp MINUS &kp A &kp MINUS &kp M &kp SPACE &kp DQT &kp DQT &kp LEFT_ARROW>;
      label = "GIT_COMMIT";
    };
  };

  keymap {
    compatible = "zmk,keymap";
// ------------------------------------------------------------------------------------------------------
// | TAB  |   Q   |   W   |   E   |   R   |  T    |       |  Y    |  U      |  I        | O | P | BKSP  |
// | SHFT |   A   |   S   |   D   |   F   |  G    |       |  H    |  J      |  K        | L | ; |   '   |
// | CTRL |   Z   |   X   |   C   |   V   |  B    |       |  N    |  M      |  ,        | . | - | ENTER |
//                        |  WIN  |  NAV  | SPACE |       | SPACE | SYMBOL  | LEFT ALT  |
    base_layer {
      label = "BASE";
      bindings = <
&mt LC(LS(LALT)) TAB  &kp Q   &kp W   &kp E         &kp R   &kp T       &kp Y       &kp U   &kp I       &kp O     &kp P       &kp BSPC
&kp LSHIFT            &kp A   &kp S   &kp D         &kp F   &kp G       &kp H       &kp J   &kp K       &kp L     &kp SEMI    &kp SINGLE_QUOTE
&kp LEFT_CONTROL      &kp Z   &kp X   &kp C         &kp V   &kp B       &kp N       &kp M   &kp COMMA   &kp DOT   &kp SLASH   &kp ENTER
                                      &kp LEFT_GUI  &mo 2   &kp SPACE   &kp SPACE   &mo 1   &kp LEFT_ALT
      >;
    };

    symbols_layer {
// ----------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |       |  6  |  7  |  8  |  9  |  0  |  -  |
// | ESC  |  !  |  @  |  #  |  $  |  %  |       |  ^  |  &  |  *  |  (  |  )  |     |
// |      |  `  |  ~  |  |  |  =  |  +  |       |  [  |  {  |  }  |  ]  |  \  |     |
//                    |     |     |     |       |     |     |     |
      label = "SYMBOLS";
      bindings = <
&trans    &kp N1      &kp N2      &kp N3      &kp N4        &kp N5      &kp N6            &kp N7              &kp N8          &kp N9            &kp N0          &kp MINUS
&kp ESC   &kp EXCL    &kp AT      &kp HASH    &kp DLLR      &kp PRCNT   &kp CARET         &kp AMPS            &kp ASTERISK    &kp LPAR          &kp RPAR        &trans
&trans    &kp GRAVE   &kp TILDE   &kp PIPE    &kp EQUAL     &kp PLUS    &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp BACKSLASH   &trans
                                  &trans      &trans        &trans      &trans            &trans              &trans
      >;
    };

    nav_layer {
// ------------------------------------------------------------------------------------------------------------------------------------
// | GUI+CTRL+TAB |       | LGUI+[  | SHFT+TAB  | TAB       | GUI+] |       | ALT+LEFT  | F8        | F9        | F10         | F11       | F12       |
// | ESC          |       |         | SCROLL DN | SCROLL UP |       |       | BRI+      | RGB BRI+  | RGB EFF+  | RGB SPEED+  | RGB HUE+  | RGB SAT+  |
// |              |       | HOME    | PAGE DN   | PAGE UP   | END   |       | BRI-      | RGB BRI-  | RGB EFF-  | RGB SPEED-  | RGB HUE-  | RGB SAT-  |
//                                  |           |           |       |       |           |           |           |
      label = "NAV";
      bindings = <
&kp LG(LC(TAB))   &trans    &kp LG(LEFT_BRACKET)  &kp LS(TAB)        &kp TAB          &kp LG(RIGHT_BRACKET)   &kp LA(LEFT)        &kp LA(DOWN)  &kp LA(UP)  &kp LA(RIGHT)   &trans    &trans
&kp ESC           &trans    &trans                &kp K_SCROLL_DOWN  &kp K_SCROLL_UP  &trans                  &kp LEFT            &kp DOWN      &kp UP      &kp RIGHT       &trans    &trans
&trans            &trans    &kp HOME              &kp PG_DN          &kp PG_UP        &kp END                 &kp LG(LEFT)        &kp LG(DOWN)  &kp LG(UP)  &kp LG(RIGHT)   &trans    &trans
                                                  &trans             &trans           &trans                  &kp LC(LG(SPACE))   &trans        &trans
      >;
    };

    extended_layer {
// ------------------------------------------------------------------------------------------------------------------------------------
// | F1         | F2    | F3    | F4    | F5    | F6    |       | F7    | F8        | F9        | F10         | F11       | F12       |
// | PLAY/PAUSE | PREV  | NEXT  | MUTE  | VOL+  | VOL+  |       | BRI+  | RGB BRI+  | RGB EFF+  | RGB SPEED+  | RGB HUE+  | RGB SAT+  |
// |            | BT 0  | BT 1  | BT 2  | BT 3  | BT 4  |       | BRI-  | RGB BRI-  | RGB EFF-  | RGB SPEED-  | RGB HUE-  | RGB SAT-  |
//                              |       |       |       |       |       |           |           |
      label = "EXT";
      bindings = <
&kp F1        &kp F2        &kp F3          &kp F4        &kp F5          &kp F6          &kp F7                &kp F8            &kp F9            &kp F10           &kp F11           &kp F12
&kp C_PP      &kp C_PREV    &kp C_NEXT      &kp C_MUTE    &kp C_VOL_DN    &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &rgb_ug RGB_BRI   &rgb_ug RGB_EFF   &rgb_ug RGB_SPI   &rgb_ug RGB_HUI   &rgb_ug RGB_SAI
&trans        &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4    &kp C_BRIGHTNESS_DEC  &rgb_ug RGB_BRD   &rgb_ug RGB_EFR   &rgb_ug RGB_SPD   &rgb_ug RGB_HUD   &rgb_ug RGB_SAD
                                            &trans        &trans          &trans          &trans                &trans            &rgb_ug RGB_TOG
      >;
    };
  };

  conditional_layers {
    compatible = "zmk,conditional-layers";

    Activate_EXT {
      if-layers = <1 2>;
      then-layer = <3>;
    };
  };
};
